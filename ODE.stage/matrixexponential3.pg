DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixCheckers.pl",
"PGcourse.pl",
"niceTables.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Matrix");

#just to make answers different
$hmmm = random(-10,10,1);
$hmmm = random(-10,10,1);

Context()->variables->add(t=>"Real");

# define matrix
        $a11 = random(-1,1,2);
        $a12 = non_zero_random(-3,3,1);
        $mult = non_zero_random(-2,2,1);
        $a21 = $mult * $a11;
        $b1 = random(-1,1,2);
        $a22 = $mult * $a12 + $b1;

        $a = Matrix([[$a11, $a12], [$a21, $a22]]);

# define inverse matrix
	$b = $a->inverse();
    $b11 = $b->element(1,1);
    $b21 = $b->element(2,1);
    $b12 = $b->element(1,2);
    $b22 = $b->element(2,2);

# define eigenvalues
    $e1= non_zero_random(-3,3,1);
# make sure that the eigenvalues are distinct
    do { $e2= non_zero_random(-3,3,1); } while ($e1==$e2);
    $e = Matrix([[$e1, 0],[0, $e2]]);
#    $eexp = Matrix([[Compute("e^(t*$e1)"), 0],[0, Compute("e^(t*$e2)")]]);

# define final matrix
	$matrix = $a * $e *$b;

  $matrix_exp = Compute("[[$a12*$b21*e^($e2*t)+$a11*$b11*e^($e1*t),$a12*$b22*e^($e2*t)+$a11*$b12*e^($e1*t)],[$a22*$b21*e^($e2*t)+$a21*$b11*e^($e1*t),$a22*$b22*e^($e2*t)+$a21*$b12*e^($e1*t)]]");
  #$matrix_exp = Matrix([[Compute("e^(t*$e1)"), 0],[0, Compute("e^(t*$e2)")]]);
#	$matrix_exp = Compute("$a * $eexp *$b");
#    $matrix_exp->reduce();

#$matrix_lr = $matrix->decompose_LR();
	#$matrix_det = $matrix_lr->det_LR();
#$matrix_det = $matrix->det();

#$min = 1;
#$min = 2 if ($e2 < $e1);
#$max = 3 - $min;

#################################

#$lambda[1] = $e->element($min,$min);
#$lambda[2] = $e->element($max,$max);

#$v[1] = Matrix([ [$a->element(1,$min)], [$a->element(2,$min)] ]);
#$v[2] = Matrix([ [$a->element(1,$max)], [$a->element(2,$max)] ]);

#$M = $matrix;

#$ME = Matrix([[1,2],[3,4]]);

Context()->texStrings;
BEGIN_TEXT
Compute the matrix exponential
\( e^{tA} \) for the matrix \( A = $matrix \).
Note the \(t\)!
$BR
$BR
\( e^{tA} = {} \)
\{
$matrix_exp->ans_array(5);
\}
END_TEXT
Context()->normalStrings;

ANS($matrix_exp->cmp);

ENDDOCUMENT();
