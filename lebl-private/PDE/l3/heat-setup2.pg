##DESCRIPTION
##  classify separable differential equations
##ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Partial differential equations)
## DBsection()
## Date()
## Institution()
## Author(Jiri Lebl)
## Level()
## TitleText1('')
## AuthorText1('')
## EditionText1('')
## Section1('')
## Problem1('')
## KEYWORDS('partial', 'differential', 'equation')

########################################################################

DOCUMENT();      

loadMacros(
"PGstandard.pl",
"PGbasicmacros.pl",
"MathObjects.pl",
"parserRadioButtons.pl",
"AnswerFormatHelp.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

Context("Numeric");

$beta = random(2,9,1);

$eql = RadioButtons(
  [["\(u_t=\alpha^2 u_{xx}-$beta u\)",
    "\(u_t=\alpha^2 u_{xx}\)",
    "\(u_t=\alpha^2 u_{xx}-$beta x\)",
    "\(u_t=\alpha^2 u_{xx}-$beta t\)",
    "\(u_t=\alpha^2 u_{xx}-$beta u_x\)",
    "\(u_{tt}=\alpha^2 u_{xx}\)",
    "\(u_{tt}+u_{xx}=0\)"]],
    "\(u_t=\alpha^2 u_{xx}-$beta u_x\)",
);

$left = non_zero_random(-9,9,1);

$bc = RadioButtons(
  [["\(u(0,t) = $left\)",
    "\(u(0,t) = 0\)",
    "\(u_x(0,t) = $left\)",
    "\(u_x(0,t) = 0\)"]],
    "\(u(0,t) = $left\)",
);

#####################
# Main text


Context()->texStrings;
BEGIN_TEXT
Suppose we have substance moving in a stream with convection, the 
stream is parametrized by distance from the source.
Suppose at $x=0$, the substance has concentration $left.
There is no boundary point at the right hand end point.
$BR
$BR
Which equation most likely governs this setup:
$BR
\{ $eql->buttons() \}
$PAR
Which BC (boundary condition) would work:
$BR
\{ $bc->buttons() \}
END_TEXT
Context()->normalStrings;


#####################
# Answer evaluation

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( $eql->cmp() );
ANS( $bc->cmp() );


#####################
# Solution

Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:$PAR

The equation is \{ $eql->correct_ans() \}
$BR
The BC is \{ $bc->correct_ans() \}
END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');

ENDDOCUMENT();
