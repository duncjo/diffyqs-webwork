# Improved Euler's Method

## Institution(Univeristy of Utah)
## Author(Utah ww group)

####################################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "AnswerFormatHelp.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);

####################################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");
Context()->variables->are(x=>'Real');

$a0 = .1 * random(0,5,1);
$a1 = $a0 + 0.25;
$a2 = $a0 + 0.5;
$a3 = $a0 + 0.75;
$a4 = $a0 + 1;



$b0 = random(1,9,1);
do {
  $c0 = 0.5*random (1,5,1);
} while ($c0 == 1);
$c1 = 1/$c0**2;
$c2 = exp($a0*$c0)*($b0-$a0/$c0 +$c1);
$d0 = $a0-$c0*$b0;
$e0 = $b0 + $d0/4;
$f0 = $a1 -$c0*$e0;
$funct = Compute("x/$c0-$c1 + $c2*exp(-$c0*x)");
$c3 = "$a4/$c0-$c1 + $c2*exp(-$c0*$a4)";

@ans =();

$b1 = $b0 + ($d0 + $f0)/8;
$d1 = $a1 - $c0*$b1;
$e1 = $b1 + $d1/4;
$f1 = $a2 - $c0*$e1;

$b2 = $b1 + ($d1 + $f1)/8;
$d2 = $a2 - $c0*$b2;
$e2 = $b2 + $d2/4;
$f2 = $a3 - $c0*$e2;


$b3 = $b2 + ($d2 + $f2)/8;
$d3 = $a3 - $c0*$b3;
$e3 = $b3 + $d3/4;
$f3 = $a4 - $c0*$e3;


$b4 = $b3 + ($d3 + $f3)/8;


$ans[0] = Compute("$a1");
$ans[1] = Compute("$b1");
$ans[2] = Compute("$d1");
$ans[3] = Compute("$e1");
$ans[4] = Compute("$f1");
$ans[5] = Compute("$a2");
$ans[6] = Compute("$b2");
$ans[7] = Compute("$d2");
$ans[8] = Compute("$e2");
$ans[9] = Compute("$f2");
$ans[10] = Compute("$a3");
$ans[11] = Compute("$b3");
$ans[12] = Compute("$d3");
$ans[13] = Compute("$e3");
$ans[14] = Compute("$f3");
$ans[15] = Compute("$a4");
$ans[16] = Compute("$b4");
$ans[17] = Compute("$c3");

####################################################

Context()->texStrings;
BEGIN_TEXT

An improved method that is similar to Euler's method is what is usually called
the ${BITALIC}Improved Euler's method${EITALIC}.  It works like this:

$PAR
Consider an equation \( y' = f(x,y).\)
From \( 
(x_n, y_n ),\)
our approximation to the solution of the differential equation at 
the \(n\)-th stage,
we find the next stage by computing the \(x\)-step \(x_{n+1}=x_n+h,\) and then
\(k_1,\) the slope at \( (x_n,y_n). \) The predicted
new value of the solution is \(z_{n+1} = y_n + h\cdot k_1.\)
Then we find the slope at the predicted new point
\( k_2 = f(x_{n+1}, z_{n+1}) \) and get the corrected point by averaging slopes
\[  y_{n+1} = y_n + \frac h2 (k_1 + k_2).\]

Suppose that we use the Improved Euler's method to approximate the 
solution to the differential equation
\[ \frac{dy}{dx}= x - $c0 y, \qquad y( $a0) = $b0.\]
We let \( x_0 = $a0\) and \( y_0 = $b0\) and pick a step size \( h=0.25.\)

$PAR
Complete the following table:
$BR
\{begintable(6) . 
row('$SPACE \(n\) $SPACE ', '\(x_n\)', '\(y_n\)', '\(k_1\)', '\( z_{n+1} \)','\(k_2\)').
row('\(0\)','\($a0\)','\($b0\)','\($d0\)','\($e0\)','\($f0\)').
row('\(1\)',ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15)).
row('\(2\)',ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15)).
row('\(3\)',ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15),ans_rule(15)).
row('\(4\)',ans_rule(15),ans_rule(15)).
endtable();
\}
$BR
\{ AnswerFormatHelp("numbers") \}

$PAR
The exact solution can also be found for the linear equation. Write the answer as a function of \(x.\)

$PAR
\(y(x)={}\) \{ans_rule(60)\}
\{ AnswerFormatHelp("formulas") \}

$PAR
Thus the actual value of the function at the point \( x=$a4 \) is

$PAR
\( y($a4) = {}\) \{ans_rule(20)\}
\{ AnswerFormatHelp("numbers") \}

END_TEXT
Context()->normalStrings;

####################################################


ANS(num_cmp($ans[0]));
ANS(num_cmp($ans[1]));
ANS(num_cmp($ans[2]));
ANS(num_cmp($ans[3]));
ANS(num_cmp($ans[4]));
ANS(num_cmp($ans[5]));
ANS(num_cmp($ans[6]));
ANS(num_cmp($ans[7]));
ANS(num_cmp($ans[8]));
ANS(num_cmp($ans[9]));
ANS(num_cmp($ans[10]));
ANS(num_cmp($ans[11]));
ANS(num_cmp($ans[12]));
ANS(num_cmp($ans[13]));
ANS(num_cmp($ans[14]));
ANS(num_cmp($ans[15]));
ANS(num_cmp($ans[16]));
ANS($funct->cmp());
ANS(num_cmp($ans[17]));

ENDDOCUMENT();

